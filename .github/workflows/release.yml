name: release
on:
  release:
    types: [ published ]
env:
  GITHUB_TOKEN: ${{ github.token }}
jobs:
  osx:
    name: Create artifacts on macOS-latest
    runs-on: macOS-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Build
        shell: bash
        run: |
          make test
          make osx
          # ensure without path to prevent `cannot execute binary file` error.
          zip zetasql-formatter_darwin_amd64.zip zetasql-formatter
          zetasql-formatter .
      - name: Get Release
        id: get
        uses: bruceadams/get-release@v1.2.0
      - name: Upload OSX Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: zetasql-formatter_darwin_amd64.zip
          asset_name: zetasql-formatter_darwin_amd64.zip
          asset_content_type: application/zip
      - name: Test installation
        shell: bash
        env:
          TAG: ${{ github.event.release.tag_name }}
        run: |
          temp=$(mktemp -d)
          wget -P $temp "https://github.com/Matts966/zetasql-formatter/releases/download/${TAG}/zetasql-formatter_darwin_amd64.zip"
          sudo unzip $temp/zetasql-formatter_darwin_amd64.zip -d /usr/local/bin
          zetasql-formatter .

  linux:
    name: Create artifacts on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Build
        run: |
            sudo apt-get update
            sudo apt-get install --no-install-recommends -y gcc-9 g++-9
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 900 \
              --slave /usr/bin/g++ g++ /usr/bin/g++-9
            make linux
            # ensure without path to prevent `cannot execute binary file` error.
            zip zetasql-formatter_linux_x86_64.zip zetasql-formatter
            ./zetasql-formatter .
      - name: Get Release
        id: get
        uses: bruceadams/get-release@v1.2.0
      - name: Upload Linux Asset
        id: upload-linux-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: zetasql-formatter_linux_x86_64.zip
          asset_name: zetasql-formatter_linux_x86_64.zip
          asset_content_type: application/zip
      - name: Test installation
        shell: bash
        env:
          TAG: ${{ github.event.release.tag_name }}
        run: |
          temp=$(mktemp -d)
          wget -P $temp "https://github.com/Matts966/zetasql-formatter/releases/download/${TAG}/zetasql-formatter_linux_x86_64.zip"
          sudo unzip $temp/zetasql-formatter_linux_x86_64.zip -d /usr/local/bin
          zetasql-formatter .

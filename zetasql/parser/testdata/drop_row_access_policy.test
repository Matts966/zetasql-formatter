# TODO: Remove no_show_parse_location_text after parse locations
# have been manually verified as correct.
[default no_show_parse_location_text]
drop row access policy foo on t1;
--
DropRowAccessPolicyStatement [0-32]
  PathExpression [23-26]
    Identifier(foo) [23-26]
  PathExpression [30-32]
    Identifier(t1) [30-32]
--
DROP ROW ACCESS POLICY foo ON t1
==

drop row access policy `all` on t1;
--
DropRowAccessPolicyStatement [0-34]
  PathExpression [23-28]
    Identifier(`all`) [23-28]
  PathExpression [32-34]
    Identifier(t1) [32-34]
--
DROP ROW ACCESS POLICY `all` ON t1
==

drop row access policy namespace.foo on t1;
--
ERROR: Syntax error: Expected keyword ON but got "." [at 1:33]
drop row access policy namespace.foo on t1;
                                ^
==

drop row access policy foo on namespace.`all`.t1;
--
DropRowAccessPolicyStatement [0-48]
  PathExpression [23-26]
    Identifier(foo) [23-26]
  PathExpression [30-48]
    Identifier(namespace) [30-39]
    Identifier(`all`) [40-45]
    Identifier(t1) [46-48]
--
DROP ROW ACCESS POLICY foo ON namespace.`all`.t1
==

drop row access policy if exists foo on t1;
--
DropRowAccessPolicyStatement(is_if_exists) [0-42]
  PathExpression [33-36]
    Identifier(foo) [33-36]
  PathExpression [40-42]
    Identifier(t1) [40-42]
--
DROP ROW ACCESS POLICY IF EXISTS foo ON t1
==

drop row access policy if exists foo on namespace.`all`.t1;
--
DropRowAccessPolicyStatement(is_if_exists) [0-58]
  PathExpression [33-36]
    Identifier(foo) [33-36]
  PathExpression [40-58]
    Identifier(namespace) [40-49]
    Identifier(`all`) [50-55]
    Identifier(t1) [56-58]
--
DROP ROW ACCESS POLICY IF EXISTS foo ON namespace.`all`.t1
==

drop row access policy `if exists foo` on t1;
--
DropRowAccessPolicyStatement [0-44]
  PathExpression [23-38]
    Identifier(`if exists foo`) [23-38]
  PathExpression [42-44]
    Identifier(t1) [42-44]
--
DROP ROW ACCESS POLICY `if exists foo` ON t1
==

drop all row policies on t1;
--
DropAllRowAccessPoliciesStatement [0-27]
  PathExpression [25-27]
    Identifier(t1) [25-27]
--
DROP ALL ROW POLICIES ON t1
==

drop row access policy on t1;
--
ERROR: Syntax error: Unexpected keyword ON [at 1:24]
drop row access policy on t1;
                       ^
==

drop row access policy foo;
--
ERROR: Syntax error: Expected keyword ON but got ";" [at 1:27]
drop row access policy foo;
                          ^
==

# The bison parsing rule generates the error at the end of "foo" because it
# does not have access to "bar", and then moves the error location forward
# to the start of the next token.
drop row access policy foo /* whitespace */ bar;
--
ERROR: Syntax error: Expected keyword ON but got identifier "bar" [at 1:45]
drop row access policy foo /* whitespace */ bar;
                                            ^
==

# The error location reported by this special-case code is correct even if
# there is no next token.
drop row access policy foo
--
ERROR: Syntax error: Expected keyword ON but got end of statement [at 1:27]
drop row access policy foo
                          ^
==

# Only the exact words "drop row access policy" will trigger the "drop row
# access policy" interpretation. When one of the words is escaped, or when IF
# EXISTS is present, the statement is interpreted as a regular DROP statement.
drop {{`row`|row}} {{`access`|access}} {{if exists|}} {{`policy`|policy}}
--
ALTERNATION GROUP: `row`,`access`,if exists,`policy`
--
ERROR: `row` is not a supported object type [at 1:6]
drop `row` `access` if exists `policy`
     ^
--
ALTERNATION GROUP: `row`,`access`,if exists,policy
--
ERROR: `row` is not a supported object type [at 1:6]
drop `row` `access` if exists policy
     ^
--
ALTERNATION GROUP: `row`,`access`,,`policy`
--
ERROR: `row` is not a supported object type [at 1:6]
drop `row` `access`  `policy`
     ^
--
ALTERNATION GROUP: `row`,`access`,,policy
--
ERROR: `row` is not a supported object type [at 1:6]
drop `row` `access`  policy
     ^
--
ALTERNATION GROUP: `row`,access,if exists,`policy`
--
ERROR: `row` is not a supported object type [at 1:6]
drop `row` access if exists `policy`
     ^
--
ALTERNATION GROUP: `row`,access,if exists,policy
--
ERROR: `row` is not a supported object type [at 1:6]
drop `row` access if exists policy
     ^
--
ALTERNATION GROUP: `row`,access,,`policy`
--
ERROR: `row` is not a supported object type [at 1:6]
drop `row` access  `policy`
     ^
--
ALTERNATION GROUP: `row`,access,,policy
--
ERROR: `row` is not a supported object type [at 1:6]
drop `row` access  policy
     ^
--
ALTERNATION GROUP: row,`access`,if exists,`policy`
--
ERROR: Syntax error: Expected keyword ACCESS but got identifier `access` [at 1:10]
drop row `access` if exists `policy`
         ^
--
ALTERNATION GROUP: row,`access`,if exists,policy
--
ERROR: Syntax error: Expected keyword ACCESS but got identifier `access` [at 1:10]
drop row `access` if exists policy
         ^
--
ALTERNATION GROUP: row,`access`,,`policy`
--
ERROR: Syntax error: Expected keyword ACCESS but got identifier `access` [at 1:10]
drop row `access`  `policy`
         ^
--
ALTERNATION GROUP: row,`access`,,policy
--
ERROR: Syntax error: Expected keyword ACCESS but got identifier `access` [at 1:10]
drop row `access`  policy
         ^
--
ALTERNATION GROUP: row,access,if exists,`policy`
--
ERROR: Syntax error: Expected keyword POLICY but got keyword IF [at 1:17]
drop row access if exists `policy`
                ^
--
ALTERNATION GROUP: row,access,if exists,policy
--
ERROR: Syntax error: Expected keyword POLICY but got keyword IF [at 1:17]
drop row access if exists policy
                ^
--
ALTERNATION GROUP: row,access,,`policy`
--
ERROR: Syntax error: Expected keyword POLICY but got identifier `policy` [at 1:18]
drop row access  `policy`
                 ^
--
ALTERNATION GROUP: row,access,,policy
--
ERROR: Syntax error: Unexpected end of statement [at 1:24]
drop row access  policy
                       ^
==

drop row access policies;
--
ERROR: Syntax error: Expected keyword POLICY but got keyword POLICIES [at 1:17]
drop row access policies;
                ^
==

drop all row policies foo on t1;
--
ERROR: Syntax error: Expected keyword ON but got identifier "foo" [at 1:23]
drop all row policies foo on t1;
                      ^
==

drop all row policy on t1;
--
ERROR: Syntax error: Expected keyword POLICIES but got keyword POLICY [at 1:14]
drop all row policy on t1;
             ^

==

drop all row access policies foo on t1;
--
ERROR: Syntax error: Expected keyword ON but got identifier "foo" [at 1:30]
drop all row access policies foo on t1;
                             ^
==

drop all row access policy on t1;
--
ERROR: Syntax error: Expected keyword POLICIES but got keyword POLICY [at 1:21]
drop all row access policy on t1;
                    ^

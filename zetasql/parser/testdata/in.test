# TODO: Remove no_show_parse_location_text after parse locations
# have been manually verified as correct.
[default no_show_parse_location_text]
select 'a' IN ('a', 'b', 'c')
--
QueryStatement [0-29]
  Query [0-29]
    Select [0-29]
      SelectList [7-29]
        SelectColumn [7-29]
          InExpression(IN) [11-29]
            StringLiteral('a') [7-10]
            InList [15-28]
              StringLiteral('a') [15-18]
              StringLiteral('b') [20-23]
              StringLiteral('c') [25-28]
--
SELECT
  'a' IN ('a', 'b', 'c')
==

select true IN ('a')
--
QueryStatement [0-20]
  Query [0-20]
    Select [0-20]
      SelectList [7-20]
        SelectColumn [7-20]
          InExpression(IN) [12-20]
            BooleanLiteral(true) [7-11]
            InList [16-19]
              StringLiteral('a') [16-19]
--
SELECT
  true IN ('a')
==

select a IN ()
--
ERROR: Syntax error: Unexpected ")" [at 1:14]
select a IN ()
             ^
==

select a LIKE b IN (a, b, c)
--
ERROR: Syntax error: Unexpected keyword IN [at 1:17]
select a LIKE b IN (a, b, c)
                ^
==

select 5 IN ('a', 4 + 5, f(b.a))
--
QueryStatement [0-32]
  Query [0-32]
    Select [0-32]
      SelectList [7-32]
        SelectColumn [7-32]
          InExpression(IN) [9-32]
            IntLiteral(5) [7-8]
            InList [13-31]
              StringLiteral('a') [13-16]
              BinaryExpression(+) [18-23]
                IntLiteral(4) [18-19]
                IntLiteral(5) [22-23]
              FunctionCall [25-31]
                PathExpression [25-26]
                  Identifier(f) [25-26]
                PathExpression [27-30]
                  Identifier(b) [27-28]
                  Identifier(a) [29-30]
--
SELECT
  5 IN ('a', 4 + 5, f(b.a))
==

select a IN a, b, c
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got identifier "a" [at 1:13]
select a IN a, b, c
            ^
==

select a NOT IN (a, f(b), c.d, (a[b.c]).d)
--
QueryStatement [0-42]
  Query [0-42]
    Select [0-42]
      SelectList [7-42]
        SelectColumn [7-42]
          InExpression(NOT IN) [13-42]
            PathExpression [7-8]
              Identifier(a) [7-8]
            InList [17-41]
              PathExpression [17-18]
                Identifier(a) [17-18]
              FunctionCall [20-24]
                PathExpression [20-21]
                  Identifier(f) [20-21]
                PathExpression [22-23]
                  Identifier(b) [22-23]
              PathExpression [26-29]
                Identifier(c) [26-27]
                Identifier(d) [28-29]
              DotIdentifier [39-41]
                ArrayElement [33-38]
                  PathExpression [32-33]
                    Identifier(a) [32-33]
                  PathExpression [34-37]
                    Identifier(b) [34-35]
                    Identifier(c) [36-37]
                Identifier(d) [40-41]
--
SELECT
  a NOT IN (a, f(b), c.d, (a[b.c]).d)
==

select a IN NOT (a, b, c)
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got keyword NOT [at 1:13]
select a IN NOT (a, b, c)
            ^
==

select a IN NOT LIKE b
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got keyword NOT [at 1:13]
select a IN NOT LIKE b
            ^
==

select col IN ('a') AND col NOT BETWEEN x + y AND f(x,y)
--
QueryStatement [0-56]
  Query [0-56]
    Select [0-56]
      SelectList [7-56]
        SelectColumn [7-56]
          AndExpr [7-56]
            InExpression(IN) [11-19]
              PathExpression [7-10]
                Identifier(col) [7-10]
              InList [15-18]
                StringLiteral('a') [15-18]
            BetweenExpression(NOT BETWEEN) [32-56]
              PathExpression [24-27]
                Identifier(col) [24-27]
              BinaryExpression(+) [40-45]
                PathExpression [40-41]
                  Identifier(x) [40-41]
                PathExpression [44-45]
                  Identifier(y) [44-45]
              FunctionCall [50-56]
                PathExpression [50-51]
                  Identifier(f) [50-51]
                PathExpression [52-53]
                  Identifier(x) [52-53]
                PathExpression [54-55]
                  Identifier(y) [54-55]
--
SELECT
  col IN ('a') AND col NOT BETWEEN x + y AND f(x, y)
==

select * from T where @Id IN (@ValidIds)
--
QueryStatement [0-40]
  Query [0-40]
    Select [0-40]
      SelectList [7-8]
        SelectColumn [7-8]
          Star(*) [7-8]
      FromClause [9-15]
        TablePathExpression [14-15]
          PathExpression [14-15]
            Identifier(T) [14-15]
      WhereClause [16-40]
        InExpression(IN) [26-40]
          ParameterExpr [22-25]
            Identifier(Id) [23-25]
          InList [30-39]
            ParameterExpr [30-39]
              Identifier(ValidIds) [31-39]
--
SELECT
  *
FROM
  T
WHERE
  @Id IN (@ValidIds)
==

select * from T where @@sysvar1 IN (@@sysvar2)
--
QueryStatement [0-46]
  Query [0-46]
    Select [0-46]
      SelectList [7-8]
        SelectColumn [7-8]
          Star(*) [7-8]
      FromClause [9-15]
        TablePathExpression [14-15]
          PathExpression [14-15]
            Identifier(T) [14-15]
      WhereClause [16-46]
        InExpression(IN) [32-46]
          SystemVariableExpr [22-31]
            PathExpression [24-31]
              Identifier(sysvar1) [24-31]
          InList [36-45]
            SystemVariableExpr [36-45]
              PathExpression [38-45]
                Identifier(sysvar2) [38-45]
--
SELECT
  *
FROM
  T
WHERE
  @@sysvar1 IN (@@sysvar2)
==

select 1 IN (select 1)
--
QueryStatement [0-22]
  Query [0-22]
    Select [0-22]
      SelectList [7-22]
        SelectColumn [7-22]
          InExpression(IN) [9-22]
            IntLiteral(1) [7-8]
            Query [13-21]
              Select [13-21]
                SelectList [20-21]
                  SelectColumn [20-21]
                    IntLiteral(1) [20-21]
--
SELECT
  1 IN (
    SELECT
      1
  )
==

select 1 NOT IN (select 1)
--
QueryStatement [0-26]
  Query [0-26]
    Select [0-26]
      SelectList [7-26]
        SelectColumn [7-26]
          InExpression(NOT IN) [13-26]
            IntLiteral(1) [7-8]
            Query [17-25]
              Select [17-25]
                SelectList [24-25]
                  SelectColumn [24-25]
                    IntLiteral(1) [24-25]
--
SELECT
  1 NOT IN (
    SELECT
      1
  )
==

select 1 IN ARRAY(select 1)
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got keyword ARRAY [at 1:13]
select 1 IN ARRAY(select 1)
            ^
==

select 1 IN EXISTS(select 1)
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got keyword EXISTS [at 1:13]
select 1 IN EXISTS(select 1)
            ^
==

select true
from T
where (select 1) IN (select (select 1))
--
QueryStatement [0-58]
  Query [0-58]
    Select [0-58]
      SelectList [7-11]
        SelectColumn [7-11]
          BooleanLiteral(true) [7-11]
      FromClause [12-18]
        TablePathExpression [17-18]
          PathExpression [17-18]
            Identifier(T) [17-18]
      WhereClause [19-58]
        InExpression(IN) [36-58]
          ExpressionSubquery [25-35]
            Query [26-34]
              Select [26-34]
                SelectList [33-34]
                  SelectColumn [33-34]
                    IntLiteral(1) [33-34]
          Query [40-57]
            Select [40-57]
              SelectList [47-57]
                SelectColumn [47-57]
                  ExpressionSubquery [47-57]
                    Query [48-56]
                      Select [48-56]
                        SelectList [55-56]
                          SelectColumn [55-56]
                            IntLiteral(1) [55-56]
--
SELECT
  true
FROM
  T
WHERE
  (
    SELECT
      1
  ) IN (
    SELECT
      (
        SELECT
          1
      )
  )
==

select 1 IN [1, 2, 3]
--
ERROR: Syntax error: Expected "(" or keyword UNNEST but got "[" [at 1:13]
select 1 IN [1, 2, 3]
            ^
==

select 1 IN UNNEST([1, 2, 3])
--
QueryStatement [0-29]
  Query [0-29]
    Select [0-29]
      SelectList [7-29]
        SelectColumn [7-29]
          InExpression(IN) [9-29]
            IntLiteral(1) [7-8]
            UnnestExpression [12-29]
              ArrayConstructor [19-28]
                IntLiteral(1) [20-21]
                IntLiteral(2) [23-24]
                IntLiteral(3) [26-27]
--
SELECT
  1 IN UNNEST(ARRAY[1, 2, 3])
==

select 1 IN ( (select 1) )
--
QueryStatement [0-26]
  Query [0-26]
    Select [0-26]
      SelectList [7-26]
        SelectColumn [7-26]
          InExpression(IN) [9-26]
            IntLiteral(1) [7-8]
            Query [14-24]
              Query [15-23]
                Select [15-23]
                  SelectList [22-23]
                    SelectColumn [22-23]
                      IntLiteral(1) [22-23]
--
SELECT
  1 IN ((
    SELECT
      1
    ))
==

select 1 IN ( (select 1) UNION ALL (select 2) )
--
QueryStatement [0-47]
  Query [0-47]
    Select [0-47]
      SelectList [7-47]
        SelectColumn [7-47]
          InExpression(IN) [9-47]
            IntLiteral(1) [7-8]
            Query [14-45]
              SetOperation(UNION ALL) [14-45]
                Query [15-23]
                  Select [15-23]
                    SelectList [22-23]
                      SelectColumn [22-23]
                        IntLiteral(1) [22-23]
                Query [36-44]
                  Select [36-44]
                    SelectList [43-44]
                      SelectColumn [43-44]
                        IntLiteral(2) [43-44]
--
SELECT
  1 IN ((
    SELECT
      1
    ) UNION ALL(
    SELECT
      2
    ))
==

select (select 1, 2) IN ( (select 1, 2) )
--
QueryStatement [0-41]
  Query [0-41]
    Select [0-41]
      SelectList [7-41]
        SelectColumn [7-41]
          InExpression(IN) [21-41]
            ExpressionSubquery [7-20]
              Query [8-19]
                Select [8-19]
                  SelectList [15-19]
                    SelectColumn [15-16]
                      IntLiteral(1) [15-16]
                    SelectColumn [18-19]
                      IntLiteral(2) [18-19]
            Query [26-39]
              Query [27-38]
                Select [27-38]
                  SelectList [34-38]
                    SelectColumn [34-35]
                      IntLiteral(1) [34-35]
                    SelectColumn [37-38]
                      IntLiteral(2) [37-38]
--
SELECT
  (
    SELECT
      1,
      2
  ) IN ((
    SELECT
      1,
      2
    ))
==

# This gets disambiguated using the special lookahead rules in
# parenthesized_in_rhs().
select 1 IN ( (select 1), (select 2) )
--
QueryStatement [0-38]
  Query [0-38]
    Select [0-38]
      SelectList [7-38]
        SelectColumn [7-38]
          InExpression(IN) [9-38]
            IntLiteral(1) [7-8]
            InList [14-36]
              ExpressionSubquery [14-24]
                Query [15-23]
                  Select [15-23]
                    SelectList [22-23]
                      SelectColumn [22-23]
                        IntLiteral(1) [22-23]
              ExpressionSubquery [26-36]
                Query [27-35]
                  Select [27-35]
                    SelectList [34-35]
                      SelectColumn [34-35]
                        IntLiteral(2) [34-35]
--
SELECT
  1 IN ((
      SELECT
        1
    ), (
      SELECT
        2
    ))
==

# This gets disambiguated using the special lookahead rules in
# parenthesized_in_rhs().
select 1 IN ( ( (select 1) UNION ALL (select 2) ), (select 3) )
--
QueryStatement [0-63]
  Query [0-63]
    Select [0-63]
      SelectList [7-63]
        SelectColumn [7-63]
          InExpression(IN) [9-63]
            IntLiteral(1) [7-8]
            InList [14-61]
              ExpressionSubquery [14-49]
                Query [16-47]
                  SetOperation(UNION ALL) [16-47]
                    Query [17-25]
                      Select [17-25]
                        SelectList [24-25]
                          SelectColumn [24-25]
                            IntLiteral(1) [24-25]
                    Query [38-46]
                      Select [38-46]
                        SelectList [45-46]
                          SelectColumn [45-46]
                            IntLiteral(2) [45-46]
              ExpressionSubquery [51-61]
                Query [52-60]
                  Select [52-60]
                    SelectList [59-60]
                      SelectColumn [59-60]
                        IntLiteral(3) [59-60]
--
SELECT
  1 IN (((
      SELECT
        1
      ) UNION ALL(
      SELECT
        2
      )), (
      SELECT
        3
    ))
==

# This can't be disambiguated using the special lookahead rules in
# parenthesized_in_rhs().
# Bison does better, pinpointing the exact location of the error.
select 1 IN ( ( (select 1) UNION ALL (select 2 x y z) ), (select 3) )
--
ERROR: Syntax error: Expected ")" but got identifier "y" [at 1:50]
select 1 IN ( ( (select 1) UNION ALL (select 2 x y z) ), (select 3) )
                                                 ^
==

# This shows that the query above does parse in both parsers after fixing the
# syntax error in the second subquery.
select 1 IN ( ( (select 1) UNION ALL (select 2 x) ), (select 3) )
--
QueryStatement [0-65]
  Query [0-65]
    Select [0-65]
      SelectList [7-65]
        SelectColumn [7-65]
          InExpression(IN) [9-65]
            IntLiteral(1) [7-8]
            InList [14-63]
              ExpressionSubquery [14-51]
                Query [16-49]
                  SetOperation(UNION ALL) [16-49]
                    Query [17-25]
                      Select [17-25]
                        SelectList [24-25]
                          SelectColumn [24-25]
                            IntLiteral(1) [24-25]
                    Query [38-48]
                      Select [38-48]
                        SelectList [45-48]
                          SelectColumn [45-48]
                            IntLiteral(2) [45-46]
                            Alias [47-48]
                              Identifier(x) [47-48]
              ExpressionSubquery [53-63]
                Query [54-62]
                  Select [54-62]
                    SelectList [61-62]
                      SelectColumn [61-62]
                        IntLiteral(3) [61-62]
--
SELECT
  1 IN (((
      SELECT
        1
      ) UNION ALL(
      SELECT
        2 AS x
      )), (
      SELECT
        3
    ))
==

select 1 IN ((1)&(2), (1) + (2), 1 < 2, 1 IS TRUE)
--
QueryStatement [0-50]
  Query [0-50]
    Select [0-50]
      SelectList [7-50]
        SelectColumn [7-50]
          InExpression(IN) [9-50]
            IntLiteral(1) [7-8]
            InList [13-49]
              BinaryExpression(&) [13-20]
                IntLiteral(1) [14-15]
                IntLiteral(2) [18-19]
              BinaryExpression(+) [22-31]
                IntLiteral(1) [23-24]
                IntLiteral(2) [29-30]
              BinaryExpression(<) [33-38]
                IntLiteral(1) [33-34]
                IntLiteral(2) [37-38]
              BinaryExpression(IS) [40-49]
                IntLiteral(1) [40-41]
                BooleanLiteral(TRUE) [45-49]
--
SELECT
  1 IN (1 & 2, 1 + 2, 1 < 2, 1 IS TRUE)
==

select x IN UNNEST()
--
ERROR: Syntax error: Unexpected ")" [at 1:20]
select x IN UNNEST()
                   ^
==

select x NOT IN UNNEST([])
--
QueryStatement [0-26]
  Query [0-26]
    Select [0-26]
      SelectList [7-26]
        SelectColumn [7-26]
          InExpression(NOT IN) [13-26]
            PathExpression [7-8]
              Identifier(x) [7-8]
            UnnestExpression [16-26]
              ArrayConstructor [23-25]
--
SELECT
  x NOT IN UNNEST(ARRAY[])
==

select 1 IN UNNEST[1]
--
ERROR: Syntax error: Expected "(" but got "[" [at 1:19]
select 1 IN UNNEST[1]
                  ^
==

select x from T where x IN UNNEST( (select 1) )
--
QueryStatement [0-47]
  Query [0-47]
    Select [0-47]
      SelectList [7-8]
        SelectColumn [7-8]
          PathExpression [7-8]
            Identifier(x) [7-8]
      FromClause [9-15]
        TablePathExpression [14-15]
          PathExpression [14-15]
            Identifier(T) [14-15]
      WhereClause [16-47]
        InExpression(IN) [24-47]
          PathExpression [22-23]
            Identifier(x) [22-23]
          UnnestExpression [27-47]
            ExpressionSubquery [35-45]
              Query [36-44]
                Select [36-44]
                  SelectList [43-44]
                    SelectColumn [43-44]
                      IntLiteral(1) [43-44]
--
SELECT
  x
FROM
  T
WHERE
  x IN UNNEST((
    SELECT
      1
  ))
==

# ZetaSQL returns an error message to help the user figure out how to update
# the query in the case of forgotten parentheses for scalar subqueries in
# UNNEST.
select x from T where x IN UNNEST(select 1)
--
ERROR: The argument to UNNEST is an expression, not a query; to use a query as an expression, the query must be wrapped with additional parentheses to make it a scalar subquery expression [at 1:35]
select x from T where x IN UNNEST(select 1)
                                  ^
==

select x IN UNNEST(x + y)
--
QueryStatement [0-25]
  Query [0-25]
    Select [0-25]
      SelectList [7-25]
        SelectColumn [7-25]
          InExpression(IN) [9-25]
            PathExpression [7-8]
              Identifier(x) [7-8]
            UnnestExpression [12-25]
              BinaryExpression(+) [19-24]
                PathExpression [19-20]
                  Identifier(x) [19-20]
                PathExpression [23-24]
                  Identifier(y) [23-24]
--
SELECT
  x IN UNNEST(x + y)
==

select x IN UNNEST(x + y, x)
--
ERROR: Syntax error: Unexpected "," [at 1:25]
select x IN UNNEST(x + y, x)
                        ^

# TODO: Remove no_show_parse_location_text after parse locations
# have been manually verified as correct.
[default no_show_parse_location_text]
select 1 LIMIT 1;
--
QueryStatement [0-16]
  Query [0-16]
    Select [0-8]
      SelectList [7-8]
        SelectColumn [7-8]
          IntLiteral(1) [7-8]
    LimitOffset [9-16]
      IntLiteral(1) [15-16]
--
SELECT
  1
LIMIT 1
==

SELECT 1 LIMIT 0;
--
QueryStatement [0-16]
  Query [0-16]
    Select [0-8]
      SelectList [7-8]
        SelectColumn [7-8]
          IntLiteral(1) [7-8]
    LimitOffset [9-16]
      IntLiteral(0) [15-16]
--
SELECT
  1
LIMIT 0
==

SELECT 1 LIMIT 1 OFFSET 0;
--
QueryStatement [0-25]
  Query [0-25]
    Select [0-8]
      SelectList [7-8]
        SelectColumn [7-8]
          IntLiteral(1) [7-8]
    LimitOffset [9-25]
      IntLiteral(1) [15-16]
      IntLiteral(0) [24-25]
--
SELECT
  1
LIMIT 1 OFFSET 0
==

SELECT 1 LIMIT cast(1 as int32) OFFSET cast(1 as int32);
--
QueryStatement [0-55]
  Query [0-55]
    Select [0-8]
      SelectList [7-8]
        SelectColumn [7-8]
          IntLiteral(1) [7-8]
    LimitOffset [9-55]
      CastExpression [15-31]
        IntLiteral(1) [20-21]
        SimpleType [25-30]
          PathExpression [25-30]
            Identifier(int32) [25-30]
      CastExpression [39-55]
        IntLiteral(1) [44-45]
        SimpleType [49-54]
          PathExpression [49-54]
            Identifier(int32) [49-54]
--
SELECT
  1
LIMIT CAST(1 AS int32) OFFSET CAST(1 AS int32)
==

SELECT 1 LIMIT cast(@param1 as int32) OFFSET cast(@param1 as string);
--
QueryStatement [0-68]
  Query [0-68]
    Select [0-8]
      SelectList [7-8]
        SelectColumn [7-8]
          IntLiteral(1) [7-8]
    LimitOffset [9-68]
      CastExpression [15-37]
        ParameterExpr [20-27]
          Identifier(param1) [21-27]
        SimpleType [31-36]
          PathExpression [31-36]
            Identifier(int32) [31-36]
      CastExpression [45-68]
        ParameterExpr [50-57]
          Identifier(param1) [51-57]
        SimpleType [61-67]
          PathExpression [61-67]
            Identifier(string) [61-67]
--
SELECT
  1
LIMIT CAST(@param1 AS int32) OFFSET CAST(@param1 AS string)
==

SELECT 1 LIMIT cast(@@sysvar1 as int32) OFFSET cast(@@sysvar2 as string);
--
QueryStatement [0-72]
  Query [0-72]
    Select [0-8]
      SelectList [7-8]
        SelectColumn [7-8]
          IntLiteral(1) [7-8]
    LimitOffset [9-72]
      CastExpression [15-39]
        SystemVariableExpr [20-29]
          PathExpression [22-29]
            Identifier(sysvar1) [22-29]
        SimpleType [33-38]
          PathExpression [33-38]
            Identifier(int32) [33-38]
      CastExpression [47-72]
        SystemVariableExpr [52-61]
          PathExpression [54-61]
            Identifier(sysvar2) [54-61]
        SimpleType [65-71]
          PathExpression [65-71]
            Identifier(string) [65-71]
--
SELECT
  1
LIMIT CAST(@@sysvar1 AS int32) OFFSET CAST(@@sysvar2 AS string)
==

SELECT 1 LIMIT cast(cast(1 as int32) as int32);
--
ERROR: Syntax error: Expected "@" or "@@" or integer literal but got keyword CAST [at 1:21]
SELECT 1 LIMIT cast(cast(1 as int32) as int32);
                    ^
==

SELECT 1 LIMIT 1 OFFSET 1
UNION ALL
SELECT 1 LIMIT 1 OFFSET 2
--
ERROR: Syntax error: Expected end of input but got keyword UNION [at 2:1]
UNION ALL
^
==

(SELECT 1 LIMIT 1 OFFSET 1)
UNION ALL
(SELECT 1 LIMIT 1 OFFSET 2)
LIMIT 10 OFFSET 2
--
QueryStatement [0-83]
  Query [0-83]
    SetOperation(UNION ALL) [0-65]
      Query [1-26]
        Select [1-9]
          SelectList [8-9]
            SelectColumn [8-9]
              IntLiteral(1) [8-9]
        LimitOffset [10-26]
          IntLiteral(1) [16-17]
          IntLiteral(1) [25-26]
      Query [39-64]
        Select [39-47]
          SelectList [46-47]
            SelectColumn [46-47]
              IntLiteral(1) [46-47]
        LimitOffset [48-64]
          IntLiteral(1) [54-55]
          IntLiteral(2) [63-64]
    LimitOffset [66-83]
      IntLiteral(10) [72-74]
      IntLiteral(2) [82-83]
--
(
SELECT
  1
LIMIT 1 OFFSET 1) UNION ALL(
SELECT
  1
LIMIT 1 OFFSET 2)
LIMIT 10 OFFSET 2
==

select (select 1 LIMIT 1), EXISTS(select 2 LIMIT 0),
    ARRAY(select 3 LIMIT 1 OFFSET 0)
from T;
--
QueryStatement [0-96]
  Query [0-96]
    Select [0-96]
      SelectList [7-89]
        SelectColumn [7-25]
          ExpressionSubquery [7-25]
            Query [8-24]
              Select [8-16]
                SelectList [15-16]
                  SelectColumn [15-16]
                    IntLiteral(1) [15-16]
              LimitOffset [17-24]
                IntLiteral(1) [23-24]
        SelectColumn [27-51]
          ExpressionSubquery(modifier=EXISTS) [27-51]
            Query [34-50]
              Select [34-42]
                SelectList [41-42]
                  SelectColumn [41-42]
                    IntLiteral(2) [41-42]
              LimitOffset [43-50]
                IntLiteral(0) [49-50]
        SelectColumn [57-89]
          ExpressionSubquery(modifier=ARRAY) [57-89]
            Query [63-88]
              Select [63-71]
                SelectList [70-71]
                  SelectColumn [70-71]
                    IntLiteral(3) [70-71]
              LimitOffset [72-88]
                IntLiteral(1) [78-79]
                IntLiteral(0) [87-88]
      FromClause [90-96]
        TablePathExpression [95-96]
          PathExpression [95-96]
            Identifier(T) [95-96]
--
SELECT
  (
    SELECT
      1
    LIMIT 1),
  EXISTS(
    SELECT
      2
    LIMIT 0),
  ARRAY(
    SELECT
      3
    LIMIT 1 OFFSET 0)
FROM
  T
==

SELECT *
FROM (SELECT * FROM T LIMIT 10 OFFSET 2) sub_foo;
--
QueryStatement [0-57]
  Query [0-57]
    Select [0-57]
      SelectList [7-8]
        SelectColumn [7-8]
          Star(*) [7-8]
      FromClause [9-57]
        TableSubquery [14-57]
          Query [15-48]
            Select [15-30]
              SelectList [22-23]
                SelectColumn [22-23]
                  Star(*) [22-23]
              FromClause [24-30]
                TablePathExpression [29-30]
                  PathExpression [29-30]
                    Identifier(T) [29-30]
            LimitOffset [31-48]
              IntLiteral(10) [37-39]
              IntLiteral(2) [47-48]
          Alias [50-57]
            Identifier(sub_foo) [50-57]
--
SELECT
  *
FROM
  (
    SELECT
      *
    FROM
      T
    LIMIT 10 OFFSET 2
  ) AS sub_foo
==

select a from t order by a, b LIMIT 3;
--
QueryStatement [0-37]
  Query [0-37]
    Select [0-15]
      SelectList [7-8]
        SelectColumn [7-8]
          PathExpression [7-8]
            Identifier(a) [7-8]
      FromClause [9-15]
        TablePathExpression [14-15]
          PathExpression [14-15]
            Identifier(t) [14-15]
    OrderBy [16-29]
      OrderingExpression(ASC) [25-26]
        PathExpression [25-26]
          Identifier(a) [25-26]
      OrderingExpression(ASC) [28-29]
        PathExpression [28-29]
          Identifier(b) [28-29]
    LimitOffset [30-37]
      IntLiteral(3) [36-37]
--
SELECT
  a
FROM
  t
ORDER BY a, b
LIMIT 3
==

# ORDER BY and LIMIT attach outside of the UNION ALL
select a from t
union all
select b from t
order by 1
LIMIT 2 OFFSET 1
--
QueryStatement [0-69]
  Query [0-69]
    SetOperation(UNION ALL) [0-41]
      Select [0-15]
        SelectList [7-8]
          SelectColumn [7-8]
            PathExpression [7-8]
              Identifier(a) [7-8]
        FromClause [9-15]
          TablePathExpression [14-15]
            PathExpression [14-15]
              Identifier(t) [14-15]
      Select [26-41]
        SelectList [33-34]
          SelectColumn [33-34]
            PathExpression [33-34]
              Identifier(b) [33-34]
        FromClause [35-41]
          TablePathExpression [40-41]
            PathExpression [40-41]
              Identifier(t) [40-41]
    OrderBy [42-52]
      OrderingExpression(ASC) [51-52]
        IntLiteral(1) [51-52]
    LimitOffset [53-69]
      IntLiteral(2) [59-60]
      IntLiteral(1) [68-69]
--
SELECT
  a
FROM
  t
UNION ALL
SELECT
  b
FROM
  t
ORDER BY 1
LIMIT 2 OFFSET 1
==

# OFFSET is not a reserved keyword, but is rejected here because we don't
# expect an identifier here.
select 1 limit offset;
--
ERROR: Syntax error: Unexpected keyword OFFSET [at 1:16]
select 1 limit offset;
               ^
==

select 1 from t limit 5 offset offset;
--
ERROR: Syntax error: Unexpected keyword OFFSET [at 1:32]
select 1 from t limit 5 offset offset;
                               ^
==

# Expected Errors Below
select 1 offset 10;
--
ERROR: Syntax error: Expected end of input but got integer literal "10" [at 1:17]
select 1 offset 10;
                ^
==

select 1 limit 5 offset;
--
ERROR: Syntax error: Unexpected ";" [at 1:24]
select 1 limit 5 offset;
                       ^
==

select a from t order by a, b LIMIT a OFFSET 10;
--
ERROR: Syntax error: Unexpected identifier "a" [at 1:37]
select a from t order by a, b LIMIT a OFFSET 10;
                                    ^
==

select 1 limit 1 order by 1;
--
ERROR: Syntax error: Expected end of input but got keyword ORDER [at 1:18]
select 1 limit 1 order by 1;
                 ^
==

select 1 limit 1 offset 2 order by 1;
--
ERROR: Syntax error: Expected end of input but got keyword ORDER [at 1:27]
select 1 limit 1 offset 2 order by 1;
                          ^
==

select 1 order by 1 offset 5
--
ERROR: Syntax error: Expected end of input but got keyword OFFSET [at 1:21]
select 1 order by 1 offset 5
                    ^
==

SELECT 1 LIMIT 1 LIMIT 1;
--
ERROR: Syntax error: Expected end of input but got keyword LIMIT [at 1:18]
SELECT 1 LIMIT 1 LIMIT 1;
                 ^
==

SELECT 1 LIMIT 10 OFFSET 1 LIMIT 1;
--
ERROR: Syntax error: Expected end of input but got keyword LIMIT [at 1:28]
SELECT 1 LIMIT 10 OFFSET 1 LIMIT 1;
                           ^
==

SELECT 1 LIMIT -1;
--
ERROR: Syntax error: Unexpected "-" [at 1:16]
SELECT 1 LIMIT -1;
               ^
==

SELECT 1 LIMIT 10 OFFSET -1;
--
ERROR: Syntax error: Unexpected "-" [at 1:26]
SELECT 1 LIMIT 10 OFFSET -1;
                         ^
==

SELECT 1 LIMIT -10 OFFSET -22;
--
ERROR: Syntax error: Unexpected "-" [at 1:16]
SELECT 1 LIMIT -10 OFFSET -22;
               ^
==

SELECT 1 LIMIT 1.5;
--
ERROR: Syntax error: Unexpected floating point literal "1.5" [at 1:16]
SELECT 1 LIMIT 1.5;
               ^
==

SELECT 1 LIMIT 'abc';
--
ERROR: Syntax error: Unexpected string literal 'abc' [at 1:16]
SELECT 1 LIMIT 'abc';
               ^
==

SELECT 1 LIMIT @param;
--
QueryStatement [0-21]
  Query [0-21]
    Select [0-8]
      SelectList [7-8]
        SelectColumn [7-8]
          IntLiteral(1) [7-8]
    LimitOffset [9-21]
      ParameterExpr [15-21]
        Identifier(param) [16-21]
--
SELECT
  1
LIMIT @param
